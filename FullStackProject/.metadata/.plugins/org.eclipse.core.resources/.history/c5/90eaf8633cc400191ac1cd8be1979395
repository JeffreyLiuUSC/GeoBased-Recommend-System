package db.mongodb;


import java.util.HashSet; 
import java.util.List; 
import java.util.Set;
import org.bson.Document;
import com.mongodb.MongoClient;
import com.mongodb.client.FindIterable; 
import com.mongodb.client.MongoDatabase;
import static com.mongodb.client.model.Filters.eq;
import db.DBConnection;
import entity.Item;
import entity.Item.ItemBuilder; 
import external.TicketMasterAPI;

public class MongoDBConnection implements DBConnection{

	private MongoClient mongoClient; 
	private MongoDatabase db;
	public MongoDBConnection() {
		// Connects to local mongodb server.
		mongoClient = new MongoClient();
		db = mongoClient.getDatabase(MongoDBUtil.DB_NAME);
	}
	
	@Override
	public void close() {
		if (mongoClient != null) {
			mongoClient.close();
		}
		
	}

	@Override
	public void setFavoriteItems(String userId, List<String> itemIds) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void unsetFavoriteItems(String userId, List<String> itemIds) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Set<String> getFavoriteItemIds(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Set<Item> getFavoriteItems(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Set<String> getCategories(String itemId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Item> searchItems(double lat, double lon, String term) {
		TicketMasterAPI tmAPI = new TicketMasterAPI();
		List<Item> items = tmAPI.search(lat, lon, term);
		for (Item item : items) {
			saveItem(item);
		}
		return items;
	}

	@Override
	public void saveItem(Item item) {
		FindIterable<Document> iterable = db.getCollection("items")
				.find(eq("item_id",item.getItemId()));
		if (iterable.first() == null) {
			db.getCollection("items")
			.insertOne(new Document()
			.append("item_id", item.getItemId())
			.append("distance", item.getDistance())
			.append("name", item.getName()).append("address", item.getAddress())
			.append("url", item.getUrl()).append("image_url",item.getImageUrl())
			.append("rating", item.getRating())
			.append("categories", item.getCategories()));
		}
		
	}

	@Override
	public String getFullname(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean verifyLogin(String userId, String password) {
		// TODO Auto-generated method stub
		return false;
	}
	
}
